#!/bin/bash
set -e

if [[ -a ".env" ]]; then
    source .env
fi

function help() {
    echo
    echo "task <command> [options]"
    echo
    echo "commands:"
    echo

    # Define column widths
    CMD_WIDTH=20
    OPT_WIDTH=10
    DESC_WIDTH=42
    COLUMN="| %-${CMD_WIDTH}s | %-${OPT_WIDTH}s | %-${DESC_WIDTH}s |\n"

    # Print table header
    printf "$COLUMN" "Command" "Option" "Description"
    echo "|$(printf '%*s' $((CMD_WIDTH + 2)) '' | tr ' ' '-')|$(printf '%*s' $((OPT_WIDTH + 2)) '' | tr ' ' '-')|$(printf '%*s' $((DESC_WIDTH + 2)) '' | tr ' ' '-')|"

    # Print table rows

    printf "$COLUMN" "install" "" "Install hugo and Vercel cli."
    printf "$COLUMN" "build" "[url]" "Build with hugo."
    printf "$COLUMN" "commit-with-llm" "" "Commit with llm generated commit message."
    printf "$COLUMN" "vercel-build" "" "Build with Vercel."
    printf "$COLUMN" "serve" "" "Serve output in pulbic folder."
    printf "$COLUMN" "dev" "[url]" "Start hugo dev server."
    printf "$COLUMN" "vercel-dev" "" "Start Vercel dev server."
    printf "$COLUMN" "version" "" "Show version of required tools."
}

BASE_URL="http://localhost:1313"

# Import commands

[ -f ~/taskfile.build/bin/commit-with-llm ] && source ~/taskfile.build/bin/commit-with-llm

# Project commands

function install() {
    echo "Install hugo from binary source"
    curl -L -o hugo.tar.gz https://github.com/gohugoio/hugo/releases/download/v0.141.0/hugo_0.141.0_Linux-64bit.tar.gz
    mkdir -p tmp
    tar -xzf hugo.tar.gz -C tmp
    mv tmp/hugo .
    rm hugo.tar.gz

    echo "Install Node dependencies."
    pnpm install
}

function build() {
    if [ -n "$1" ]; then
        BASE_URL=$1
    fi
    pnpm run build
    ./hugo -b "$BASE_URL"
}

function vercel-build() {
    vercel build
}

function serve() {
    npx serve public
}

function dev() {
    if [ -n "$1" ]; then
        BASE_URL=$1
    fi
    ./hugo server -b "$BASE_URL"
}

function vercel-dev() {
    vercel dev
}

function version() {
    ./hugo --version
    vercel --version
}

if declare -f "$1" > /dev/null; then
    "$1" "${@:2}"
else
    echo "Unknown command: $1"
    help
    exit 1
fi
